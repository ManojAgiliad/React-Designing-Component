"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/speakers/[id]";
exports.ids = ["pages/api/speakers/[id]"];
exports.modules = {

/***/ "fs":
/*!*********************!*\
  !*** external "fs" ***!
  \*********************/
/***/ ((module) => {

module.exports = require("fs");

/***/ }),

/***/ "path":
/*!***********************!*\
  !*** external "path" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("path");

/***/ }),

/***/ "util":
/*!***********************!*\
  !*** external "util" ***!
  \***********************/
/***/ ((module) => {

module.exports = require("util");

/***/ }),

/***/ "(api)/./pages/api/speakers/[id].js":
/*!************************************!*\
  !*** ./pages/api/speakers/[id].js ***!
  \************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! path */ \"path\");\n/* harmony import */ var path__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(path__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! fs */ \"fs\");\n/* harmony import */ var fs__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(fs__WEBPACK_IMPORTED_MODULE_1__);\n//import speakerData from '../../../src/SpeakerData';\n\n\nconst { promisify } = __webpack_require__(/*! util */ \"util\");\nconst readFile = promisify((fs__WEBPACK_IMPORTED_MODULE_1___default().readFile));\nconst writeFile = promisify((fs__WEBPACK_IMPORTED_MODULE_1___default().writeFile));\nconst delay = (ms)=>new Promise((resolve)=>setTimeout(resolve, ms));\nasync function handler(req, res) {\n    //res.status(200).send(JSON.stringify(speakerData,null,2));\n    const method = req?.method;\n    const id = parseInt(req?.query.id);\n    const recordFromBody = req?.body;\n    const jsonFile = path__WEBPACK_IMPORTED_MODULE_0___default().resolve(\"./\", \"db.json\");\n    switch(method){\n        case \"POST\":\n            await postMethod();\n            break;\n        case \"PUT\":\n            await putMethod();\n            break;\n        case \"DELETE\":\n            await deleteMethod();\n            break;\n        default:\n            res.status(501).send(`Method ${method} not implemented`);\n            console.log(`Method ${method} not implemented`);\n    }\n    async function putMethod() {\n        try {\n            const readFileData = await readFile(jsonFile);\n            await delay(1000);\n            const speakers = JSON.parse(readFileData).speakers;\n            if (!speakers) {\n                res.status(404).send(\"Error: Request failed with status code 404\");\n            } else {\n                const newSpeakersArray = speakers.map(function(rec) {\n                    return rec.id == id ? recordFromBody : rec;\n                });\n                writeFile(jsonFile, JSON.stringify({\n                    speakers: newSpeakersArray\n                }, null, 2));\n                res.setHeader(\"Content-Type\", \"application/json\");\n                res.status(200).send(JSON.stringify(recordFromBody, null, 2));\n                console.log(`PUT /api/speakers/${id}  status: 200`);\n            }\n        } catch (e) {\n            res.status(500).send(`PUT /api/speakers/${id}  status: 500 unexpected error`);\n            console.log(`PUT /api/speakers/${id}  status: 200`, e);\n        }\n    }\n    async function deleteMethod() {\n        try {\n            const readFileData = await readFile(jsonFile);\n            await delay(1000);\n            const speakers = JSON.parse(readFileData).speakers;\n            if (!speakers) {\n                res.status(404).send(\"Error: Request failed with status code 404\");\n            } else {\n                const newSpeakersArray = speakers.filter(function(rec) {\n                    return rec.id != id;\n                });\n                writeFile(jsonFile, JSON.stringify({\n                    speakers: newSpeakersArray\n                }, null, 2));\n                res.setHeader(\"Content-Type\", \"application/json\");\n                res.status(200).send(JSON.stringify(speakers.find((rec)=>rec.id == id), null, 2));\n                console.log(`DELETE /api/speakers/${id}  status: 200`);\n            }\n        } catch (e) {\n            res.status(500).send(`DELETE /api/speakers/${id}  status: 500 unexpected error`);\n            console.log(`DELETE /api/speakers/${id}  status: 200`, e);\n        }\n    }\n    async function postMethod() {\n        try {\n            const readFileData = await readFile(jsonFile);\n            await delay(1000);\n            const speakers = JSON.parse(readFileData).speakers;\n            if (!speakers) {\n                res.status(404).send(\"Error: Request failed with status code 404\");\n            } else {\n                const idNew = speakers.reduce((accumulator, currentValue)=>{\n                    const idCurrent = parseInt(currentValue.id);\n                    return idCurrent > accumulator ? idCurrent : accumulator;\n                }, 0) + 1;\n                const newSpeakerRec = {\n                    ...recordFromBody,\n                    id: idNew.toString()\n                };\n                const newSpeakersArray = [\n                    newSpeakerRec,\n                    ...speakers\n                ];\n                writeFile(jsonFile, JSON.stringify({\n                    speakers: newSpeakersArray\n                }, null, 2));\n                res.setHeader(\"Content-Type\", \"application/json\");\n                res.status(200).send(JSON.stringify(newSpeakerRec, null, 2));\n                console.log(`PUT /api/speakers/${id}  status: 200`);\n            }\n        } catch (e) {\n            res.status(500).send(`PUT /api/speakers/${id}  status: 500 unexpected error`);\n            console.log(`PUT /api/speakers/${id}  status: 200`, e);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/speakers/[id].js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/speakers/[id].js"));
module.exports = __webpack_exports__;

})();